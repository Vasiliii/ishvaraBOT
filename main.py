from  aiogram import Bot, Dispatcher, executor, types 
import config
import markups as nav

bot = Bot(config.Token)
dp = Dispatcher(bot)

def checkSubChanel(chat_member):
    return chat_member['status'] != "left"
    
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("Hello!")
    
@dp.message_handler(commands=['test'], commands_prefix = '!')
async def test(message: types.Message):
    await message.reply(message.from_user.id)

    
@dp.message_handler(content_types=['text'])
async def textFilter(message: types.Message):
    if checkSubChanel(await bot.get_chat_member(chat_id=config.chanel_id, user_id=message.from_user.id)):
        lower_message = message.text.lower()
        for spam in config.spam:
                if spam in lower_message.lower():
                    await message.forward(config.delGroup_id)
                    await message.delete()
                    break
        for keyword in config.estate:
                if keyword in lower_message.lower():
                    await message.answer(f'{message.from_user.first_name}–í—ã –º–æ–∂–µ—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ "–ú–æ–π–î–æ–º"',reply_markup=nav.botMenu)
                    await message.delete() 
                    break
        for bad_word in config.swears:
            if bad_word in lower_message:
                await message.answer("–ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏—Ç—å –≤—ã –∑–∞–≥–ª—É—à–µ–Ω—ã –Ω–∞ 6 —á–∞—Å–æ–≤")
                await message.delete()
                break
    else:
        await message.forward(config.delGroup_id)
        await message.answer(f"{message.from_user.first_name}, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª üëáÔ∏è",reply_markup=nav.chanelMenu)
        await message.delete()
        
@dp.message_handler(content_types=['photo'])
async def photoFilter(message: types.Message):
    if checkSubChanel(await bot.get_chat_member(chat_id=config.chanel_id, user_id=message.from_user.id)):
        lower_message = message.text.lower()
        for spam in config.spam:
                if spam in lower_message.lower():
                    await message.forward(config.delGroup_id)
                    await message.delete()
                    break
        for keyword in config.estate:
                if keyword in lower_message.lower():
                    await message.answer(f'{message.from_user.first_name}–í—ã –º–æ–∂–µ—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ "–ú–æ–π–î–æ–º"',reply_markup=nav.botMenu)
                    await message.delete() 
                    break
        for bad_word in config.swears:
            if bad_word in lower_message:
                await message.answer("–ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏—Ç—å –≤—ã –∑–∞–≥–ª—É—à–µ–Ω—ã –Ω–∞ 6 —á–∞—Å–æ–≤")
                await message.delete()
                break
    else:
        await message.forward(config.delGroup_id)
        await message.answer(f"{message.from_user.first_name}, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª üëáÔ∏è",reply_markup=nav.chanelMenu)
        await message.delete()
        


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)